<<<<<<< HEAD
﻿@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/Page_Layout_Loggin.cshtml";
}

<style>
    .BigIcon {
        font-size: 300px;
    }

    .FormPosition {
        margin-top: 20%;
        border: solid;
        border-color: darkblue;
        padding-bottom: 14px;
        padding-left: 7px;
        padding-right: 7px;
        padding-top: 17px;
    }

    .Loggin {
        margin-left: -20px;
        margin-top: 55px;
    }

    .Submit {
        margin-left: -70px;
        margin-top: 113px;
        border: none;
    }

    .SettingsNew {
        margin-left: 1010px;
        margin-bottom: 10px;
    }

    .SettingsForgot {
        margin-left: 1010px;
        margin-top: 0px;
    }

    .TextColour {
        color: white;
        margin-left: 15px;
    }
</style>
<script>
    $(document).ready(function () {
        $("#jqxwindowNewUser").jqxWindow({
            height: 327,
            //height: 'auto',
            width: 460,
            theme: 'energyblue',
            autoOpen: false,
            isModal: false,
            resizable: false,
            position: 'top, middle',
        });
        $("#jqxwindowFogotPassword").jqxWindow({
            height: 327,
            //height: 'auto',
            width: 460,
            theme: 'energyblue',
            autoOpen: false,
            isModal: false,
            resizable: false,
            position: 'top, middle',
        });

    });
    function NewUserLogin() {
        $("#jqxwindowNewUser").jqxWindow('open');
    }
    function FogotPassword() {
        $("#jqxwindowFogotPassword").jqxWindow('open');
    }


    function GetFogotPassword()
    {
        debugger;
        var UName = $("#User").val();
        var url = '@Url.Action("GetUserPassword", "Home")';
        $.post(url, { UserName: UName },
         function (data) {
             var Msg = data.Getpassword;
             if (Msg == true) {
                 ShowMessage("Password is sent to your email Successfully!", "success");
             }
             else {
                 if (Msg == false) {
                     ShowMessage("Error in sending password to your email!", "warning");
                 }
             }
         }

         ).fail(function (ev) {
         });
        $("#jqxwindowFogotPassword").jqxWindow('close');
    }
</script>

<button class="SettingsNew" style="background-color:blue" onclick="NewUserLogin()">

    <i class="fa fa-cog fa-2x" style="color:#fff;background-color:blue;padding:unset">New</i>

</button>
<button class="SettingsForgot" style="background-color:darkblue" onclick="FogotPassword()">

    <i class="fa fa-anchor fa-2x" style="color:#fff;background-color:darkblue;padding-bottom:3px;padding-top:3px;font-size:21px">Forgot</i>

</button>



<div class="row col-md-12 FormPosition">
    <div class="col-md-5">
        <i class="fa fa-user BigIcon " style="color:#fff;background-color:darkblue"></i>
    </div>
    @using (Html.BeginForm("UserLogin", "Home", new { ReturnMsg = ViewBag.ReturnMsg }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {<div>
        <div class="col-md-6 Loggin">
            <form>

                <div style="padding-bottom:10px">
                    @Html.Label("User Name", new { @class = "control-label col-sm-9", @style = "text-align:left;width:200px;font-size:20px;" })
                </div>
                <div style="padding-bottom:10px">
                    @Html.TextBox("UserName", "", new { @class = "form-control", @id = "UserName", @style = "width:2000px;font-size:20px" })
                </div>
                <div>
                    @Html.Label("Password", new { @class = "control-label col-sm-9", @style = "text-align:left;width:200px;font-size:20px" })
                </div>
                <div>
                    @Html.Password("Logged", "", new { @class = "form-control", @id = "Logged", @style = "width:2000px;font-size:20px" })
                </div>

            </form>
        </div>

        <button class="col-md-1 Submit" type="submit" style="background-color:white">
            <i class="fa fa-arrow-right fa-2x " style="color:#fff;background-color:darkblue;padding:unset"></i>
        </button>
    </div>
    }
</div>
<div id='jqxwindowNewUser'>
    <div>New Loggin</div>
    <div style="padding-bottom:20px;padding-left:20px;padding-top:15px;padding-right:20px">
        @using (Html.BeginForm("CreateNewUser", "Home", new { ReturnMsg = ViewBag.ReturnMsg }, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="jqxWidget">
                <form>
                    <div style="padding-bottom:10px">
                        @Html.Label("User Name", new { @class = "control-label col-sm-9", @style = "text-align:left;width:200px;font-size:20px;" })
                    </div>
                    <div style="padding-bottom:10px">
                        @Html.TextBox("username", "", new { @class = "form-control", @id = "NewUser", @style = "width:2000px;font-size:20px" })
                    </div>
                    <div style="padding-bottom:10px">
                        @Html.Label("E-Mail", new { @class = "control-label col-sm-9", @style = "text-align:left;width:200px;font-size:20px;" })
                    </div>
                    <div style="padding-bottom:10px">
                        @Html.TextBox("Email", "", new { @class = "form-control", @id = "Email", @style = "width:2000px;font-size:20px" })
                    </div>
                    <div>
                        @Html.Label("Password", new { @class = "control-label col-sm-9", @style = "text-align:left;width:200px;font-size:20px" })
                    </div>
                    <div>
                        @Html.Password("Password", "", new { @class = "form-control", @id = "NewUserPassword", @style = "width:2000px;font-size:20px" })
                    </div>
                    <div>
                        <button type="submit"></button>
                    </div>
                </form>
            </div>
        }
    </div>
</div>
<div id='jqxwindowFogotPassword'>
    <div>Password recover</div>
    <div style="padding-bottom:20px;padding-left:20px;padding-top:15px;padding-right:20px">
        <div class="jqxWidget">
            <form>
                <div style="padding-bottom:10px">
                    @Html.Label("User Name", new { @class = "control-label col-sm-9", @style = "text-align:left;width:200px;font-size:20px;" })
                </div>
                <div style="padding-bottom:10px">
                    @Html.TextBox("UserName", "", new { @class = "form-control", @id = "User", @style = "width:2000px;font-size:20px" })
                </div>
                <div>
                    <button onclick="GetFogotPassword()"></button>
                </div>
            </form>
        </div>
    </div>
</div>

=======
﻿
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
window.onload = function () {

    var chart = new CanvasJS.Chart("chartContainer", {
        animationEnabled: true,
        zoomEnabled: true,
        title:{
            text: "Try Zooming and Panning"
        },
        axisY :{
            includeZero:false
        },
        data: data  // random generator below
    });
    chart.render();


    var chart = new CanvasJS.Chart("chartContainer2", {
        animationEnabled: true,
        zoomEnabled: true,
        title: {
            text: "Real Estate Rates"
        },
        axisX: {
            title: "Area (in sq. ft)",
            minimum: 790,
            maximum: 2260
        },
        axisY: {
            title: "Price (in USD)",
            valueFormatString: "$#,##0k"
        },
        data: [{
            type: "scatter",
            toolTipContent: "<b>Area: </b>{x} sq.ft<br/><b>Price: </b>${y}k",
            dataPoints: [
                { x: 800, y: 350 },
                { x: 900, y: 450 },
                { x: 850, y: 450 },
                { x: 1250, y: 700 },
                { x: 1100, y: 650 },
                { x: 1350, y: 850 },
                { x: 1200, y: 900 },
                { x: 1410, y: 1250 },
                { x: 1250, y: 1100 },
                { x: 1400, y: 1150 },
                { x: 1500, y: 1050 },
                { x: 1330, y: 1120 },
                { x: 1580, y: 1220 },
                { x: 1620, y: 1400 },
                { x: 1250, y: 1450 },
                { x: 1350, y: 1600 },
                { x: 1650, y: 1300 },
                { x: 1700, y: 1620 },
                { x: 1750, y: 1700 },
                { x: 1830, y: 1800 },
                { x: 1900, y: 2000 },
                { x: 2050, y: 2200 },
                { x: 2150, y: 1960 },
                { x: 2250, y: 1990 }
            ]
        }]
    });
    chart.render();

    var chart = new CanvasJS.Chart("chartContainer3", {
        animationEnabled: true,
        title: {
            text: "Server CPU Utilization vs Active Users"
        },
        axisX: {
            title: "Active Users"
        },
        axisY: {
            title: "CPU Utilization",
            suffix: "%"
        },
        legend: {
            cursor: "pointer",
            itemclick: toggleDataSeries
        },
        data: [{
            type: "scatter",
            name: "Server 1",
            showInLegend: true,
            toolTipContent: "<span style=\"color:#4F81BC \">{name}</span><br>Active Users: {x}<br>CPU Utilization: {y}%",
            dataPoints: [
                { x: 100, y: 10 },
                { x: 110, y: 15 },
                { x: 130, y: 17 },
                { x: 140, y: 19 },
                { x: 145, y: 21 },
                { x: 400, y: 25 },
                { x: 430, y: 27 },
                { x: 444, y: 30 },
                { x: 460, y: 29 },
                { x: 490, y: 35 },
                { x: 500, y: 40 },
                { x: 510, y: 50 },
                { x: 600, y: 30 },
                { x: 700, y: 35 },
                { x: 800, y: 40 },
                { x: 900, y: 45 },
                { x: 1000, y: 47 },
                { x: 1200, y: 55 },
                { x: 1230, y: 51 },
                { x: 1300, y: 60 },
                { x: 1330, y: 65 },
                { x: 1400, y: 70 },
                { x: 1450, y: 71 },
                { x: 1500, y: 69 },
                { x: 1530, y: 75 },
                { x: 1590, y: 79 },
                { x: 1600, y: 62 },
                { x: 1620, y: 80 },
                { x: 1640, y: 85 },
                { x: 1700, y: 81 },
                { x: 1790, y: 89 },
                { x: 1800, y: 91 },
                { x: 1950, y: 93 },
                { x: 1980, y: 88 },
                { x: 2000, y: 90 }
            ]
        },
        {
            type: "scatter",
            name: "Server 2",
            showInLegend: true,
            markerType: "triangle",
            toolTipContent: "<span style=\"color:#C0504E \">{name}</span><br>Active Users: {x}<br>CPU Utilization: {y}%",
            dataPoints: [
                { x: 100, y: 25 },
                { x: 110, y: 35 },
                { x: 130, y: 35 },
                { x: 140, y: 40 },
                { x: 145, y: 45 },
                { x: 400, y: 42 },
                { x: 430, y: 32 },
                { x: 444, y: 35 },
                { x: 460, y: 43 },
                { x: 490, y: 50 },
                { x: 500, y: 57 },
                { x: 510, y: 67 },
                { x: 600, y: 40 },
                { x: 700, y: 46 },
                { x: 800, y: 50 },
                { x: 900, y: 60 },
                { x: 1000, y: 66 },
                { x: 1200, y: 79 },
                { x: 1230, y: 60 },
                { x: 1300, y: 75 },
                { x: 1330, y: 80 },
                { x: 1400, y: 82 },
                { x: 1450, y: 88 },
                { x: 1500, y: 87 },
                { x: 1530, y: 88 },
                { x: 1590, y: 90 },
                { x: 1600, y: 80 },
                { x: 1620, y: 93 },
                { x: 1640, y: 91 },
                { x: 1700, y: 92 },
                { x: 1790, y: 93 },
                { x: 1800, y: 90 },
                { x: 1950, y: 91 },
                { x: 1980, y: 93 },
                { x: 2000, y: 95 }
            ]
        }]
    });
    chart.render();

    function toggleDataSeries(e) {
        if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
            e.dataSeries.visible = false;
        } else {
            e.dataSeries.visible = true;
        }
        e.chart.render();
    }

    var dps = []; // dataPoints
    var chart = new CanvasJS.Chart("chartContainer4", {
        title: {
            text: "Dynamic Data"
        },
        axisY: {
            includeZero: false
        },
        data: [{
            type: "line",
            dataPoints: dps
        }]
    });

    var xVal = 0;
    var yVal = 100;
    var updateInterval = 1000;
    var dataLength = 20; // number of dataPoints visible at any point

    var updateChart = function (count) {

        count = count || 1;

        for (var j = 0; j < count; j++) {
            yVal = yVal + Math.round(5 + Math.random() * (-5 - 5));
            dps.push({
                x: xVal,
                y: yVal
            });
            xVal++;
        }

        if (dps.length > dataLength) {
            dps.shift();
        }

        chart.render();
    };

    updateChart(dataLength);
    setInterval(function () { updateChart() }, updateInterval);

    var chart = new CanvasJS.Chart("chartContainer5", {
        animationEnabled: true,
        theme: "light2",
        title: {
            text: "Simple Line Chart"
        },
        axisY: {
            includeZero: false
        },
        data: [{
            type: "line",
            dataPoints: [
                { y: 450 },
                { y: 414 },
                { y: 520, indexLabel: "highest", markerColor: "red", markerType: "triangle" },
                { y: 460 },
                { y: 450 },
                { y: 500 },
                { y: 480 },
                { y: 480 },
                { y: 410, indexLabel: "lowest", markerColor: "DarkSlateGrey", markerType: "cross" },
                { y: 500 },
                { y: 480 },
                { y: 510 }
            ]
        }]
    });
    chart.render();

    var chart = new CanvasJS.Chart("chartContainer6", {
        animationEnabled: true,
        theme: "light2",
        title: {
            text: "Simple Line Chart"
        },
        axisY: {
            includeZero: false
        },
        data: [{
            type: "line",
            dataPoints: [
                { y: 450 },
                { y: 414 },
                { y: 520, indexLabel: "highest", markerColor: "red", markerType: "triangle" },
                { y: 460 },
                { y: 450 },
                { y: 500 },
                { y: 480 },
                { y: 480 },
                { y: 410, indexLabel: "lowest", markerColor: "DarkSlateGrey", markerType: "cross" },
                { y: 500 },
                { y: 480 },
                { y: 510 }
            ]
        }]
    });
    chart.render();

    var chart = new CanvasJS.Chart("chartContainer7", {
        title: {
            text: "Dynamic Data"
        },
        axisY: {
            includeZero: false
        },
        data: [{
            type: "line",
            dataPoints: dps
        }]
    });

    var xVal = 0;
    var yVal = 100;
    var updateInterval = 1000;
    var dataLength = 20; // number of dataPoints visible at any point

    var updateChart = function (count) {

        count = count || 1;

        for (var j = 0; j < count; j++) {
            yVal = yVal + Math.round(5 + Math.random() * (-5 - 5));
            dps.push({
                x: xVal,
                y: yVal
            });
            xVal++;
        }

        if (dps.length > dataLength) {
            dps.shift();
        }

        chart.render();
    };

    updateChart(dataLength);
    setInterval(function () { updateChart() }, updateInterval);

}

var limit = 1000;

var y = 0;
var data = [];
var dataSeries = { type: "line" };
var dataPoints = [];
for (var i = 0; i < limit; i += 1) {
    y += (Math.random() * 10 - 5);
    dataPoints.push({
        x: i - limit / 2,
        y: y
    });
}
dataSeries.dataPoints = dataPoints;
data.push(dataSeries);



</script>

<!--main content start-->
<section id="main-content">
    <section class="wrapper">
        <!--overview start-->
        <div class="row">
            <div class="col-lg-12">
                <h3 class="page-header"><i class="fa fa-laptop"></i> Home</h3>
                <ol class="breadcrumb">
                    <li><i class="fa fa-laptop"></i> Home - Company Stock Rates</li>
                </ol>
                <div class="container">
                    <div class="row">
                        <div>
                            <div id="chartContainer" style="height: 300px;"></div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <div id="chartContainer2" style="height: 300px;"></div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <div id="chartContainer3" style="height: 300px;"></div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <div id="chartContainer4" style="height: 300px;"></div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <div id="chartContainer5" style="height: 300px;"></div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <div id="chartContainer6" style="height: 300px;"></div>
                            <br />
                        </div>
                        <div class="col-md-6">
                            <div id="chartContainer7" style="height: 300px;"></div>
                            <br />
                        </div>
                    </div>
                </div>
            </div>
    </section>
</section>
<!--main content end-->
>>>>>>> 5c0c5f8a2ba390f128684b1234fb848c82a46819
