//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Broker.UI.Web.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IBrokerService")]
    public interface IBrokerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerService/GetLoggedBroker", ReplyAction="http://tempuri.org/IBrokerService/GetLoggedBrokerResponse")]
        bool GetLoggedBroker(string UserName, string Logged);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerService/GetLoggedBroker", ReplyAction="http://tempuri.org/IBrokerService/GetLoggedBrokerResponse")]
        System.Threading.Tasks.Task<bool> GetLoggedBrokerAsync(string UserName, string Logged);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerService/CreateNewBroker", ReplyAction="http://tempuri.org/IBrokerService/CreateNewBrokerResponse")]
        bool CreateNewBroker(string username, string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerService/CreateNewBroker", ReplyAction="http://tempuri.org/IBrokerService/CreateNewBrokerResponse")]
        System.Threading.Tasks.Task<bool> CreateNewBrokerAsync(string username, string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerService/GetBrokerPassword", ReplyAction="http://tempuri.org/IBrokerService/GetBrokerPasswordResponse")]
        bool GetBrokerPassword(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrokerService/GetBrokerPassword", ReplyAction="http://tempuri.org/IBrokerService/GetBrokerPasswordResponse")]
        System.Threading.Tasks.Task<bool> GetBrokerPasswordAsync(string UserName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBrokerServiceChannel : Broker.UI.Web.ServiceReference2.IBrokerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrokerServiceClient : System.ServiceModel.ClientBase<Broker.UI.Web.ServiceReference2.IBrokerService>, Broker.UI.Web.ServiceReference2.IBrokerService {
        
        public BrokerServiceClient() {
        }
        
        public BrokerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BrokerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrokerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrokerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GetLoggedBroker(string UserName, string Logged) {
            return base.Channel.GetLoggedBroker(UserName, Logged);
        }
        
        public System.Threading.Tasks.Task<bool> GetLoggedBrokerAsync(string UserName, string Logged) {
            return base.Channel.GetLoggedBrokerAsync(UserName, Logged);
        }
        
        public bool CreateNewBroker(string username, string Email, string Password) {
            return base.Channel.CreateNewBroker(username, Email, Password);
        }
        
        public System.Threading.Tasks.Task<bool> CreateNewBrokerAsync(string username, string Email, string Password) {
            return base.Channel.CreateNewBrokerAsync(username, Email, Password);
        }
        
        public bool GetBrokerPassword(string UserName) {
            return base.Channel.GetBrokerPassword(UserName);
        }
        
        public System.Threading.Tasks.Task<bool> GetBrokerPasswordAsync(string UserName) {
            return base.Channel.GetBrokerPasswordAsync(UserName);
        }
    }
}
